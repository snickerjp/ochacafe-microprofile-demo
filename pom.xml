<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.helidon.applications</groupId>
        <artifactId>helidon-mp</artifactId>
        <version>1.4.1</version>
        <relativePath/>
    </parent>

    <groupId>oracle.demo</groupId>
    <artifactId>helidon-demo-mp</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!-- packaging>jar</packaging -->
    <name>${project.artifactId}</name>

    <profiles>
        <!-- generate protobuf classes => mvn -P protoc generate-sources -->
        <profile>
            <id>protoc</id>
            <dependencies>
                <dependency>
                    <groupId>io.grpc</groupId>
                    <artifactId>grpc-protobuf</artifactId>
                    <version>1.26.0</version>
                </dependency>
                <dependency>
                    <groupId>io.grpc</groupId>
                    <artifactId>grpc-stub</artifactId>
                    <version>1.26.0</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!--  compile .proto -->
                    <plugin>
                        <groupId>org.xolstice.maven.plugins</groupId>
                        <artifactId>protobuf-maven-plugin</artifactId>
                        <version>0.6.1</version>
                        <configuration>
                            <protocArtifact>com.google.protobuf:protoc:3.11.0:exe:${os.detected.classifier}</protocArtifact>
                            <pluginId>grpc-java</pluginId>
                            <pluginArtifact>io.grpc:protoc-gen-grpc-java:1.26.0:exe:${os.detected.classifier}</pluginArtifact>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>compile-custom</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- copy generated sources -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>copy-template</id>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <target>
                                        <echo message="copy protobuf generated files to src"/>
                                        <copy todir="src/main/java" overwrite="no">
                                            <fileset dir="target/generated-sources/protobuf/java"/>
                                            <fileset dir="target/generated-sources/protobuf/grpc-java"/>
                                        </copy>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- mvn -P could ... -->
        <profile>
            <id>cloud</id>
            <properties>
                <docker.repo.prefix>{{ remote docker repository path }}</docker.repo.prefix>
            </properties>
        </profile>
    </profiles>

    <properties>
        <mainClass>oracle.demo.Main</mainClass>
        <docker.repo.prefix></docker.repo.prefix>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--exec.mainClass>${mainClass}</exec.mainClass -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.helidon.microprofile.bundles</groupId>
            <artifactId>helidon-microprofile</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jandex</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>javax.activation-api</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- support gRPC-->
        <dependency>
            <groupId>io.helidon.microprofile.grpc</groupId>
            <artifactId>helidon-microprofile-grpc-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.grpc</groupId>
            <artifactId>helidon-microprofile-grpc-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>1.26.0</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>1.26.0</version>
        </dependency>

        <!-- support tracing -->
        <dependency>
            <groupId>io.helidon.microprofile.tracing</groupId>
            <artifactId>helidon-microprofile-tracing</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.tracing</groupId>
            <artifactId>helidon-tracing-jaeger</artifactId>
        </dependency>
        <!-- dependency>
            <groupId>io.helidon.tracing</groupId>
            <artifactId>helidon-tracing-zipkin</artifactId>
        </dependency -->

        <!-- support jpa,jta -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.199</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-jpa</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>2.2.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>javax.transaction-api</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>

        <!-- cowweb -->
        <dependency>
            <groupId>com.github.ricksbrown</groupId>
            <artifactId>cowsay</artifactId>
            <version>1.0.3</version>
        </dependency>

    </dependencies>

    <build>
        <!-- for gRPC -->
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.2</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-libs</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-index</id>
                    </execution>
                </executions>
            </plugin>

            <!-- JPA weaving -->
            <plugin>
                <groupId>com.ethlo.persistence.tools</groupId>
                <artifactId>eclipselink-maven-plugin</artifactId>
                <version>2.7.4.1</version>
                <dependencies>
                    <dependency>
                        <groupId>javax.annotation</groupId>
                        <artifactId>javax.annotation-api</artifactId>
                        <version>1.3.1</version>
                    </dependency>
                    <dependency>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                        <version>2.3.0</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>weave</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>weave</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>modelgen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>modelgen</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- making docker image using jib : mvn post-integration-test -->
            <!-- workaround jib related issues: beans.xml must exist in each classpath  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>workaround-jib-issue-for-cdi</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/jib/app/classes/META-INF</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/META-INF</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>beans.xml</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>1.8.0</version>
                <configuration>
                    <from>
                        <image>openjdk:8-jre-alpine</image>
                    </from>
                    <to>
                        <!-- image>${docker.repo}</image -->
                        <image>${docker.repo.prefix}${project.artifactId}</image>
                        <tags>
                            <tag>${project.version}</tag>
                            <tag>latest</tag>
                        </tags>
                    </to>
                    <!-- matched with maven-resources-plugin -->
                    <!-- depricated extraDirectory>target/jib</extraDirectory -->
                    <extraDirectories>
                        <paths>
                            <path>target/jib</path>
                        </paths>
                    </extraDirectories>
                    <container>
                        <!-- good defaults intended for containers -->
                        <jvmFlags>
                            <jmxFlag>-server</jmxFlag>
                            <jmxFlag>-Djava.awt.headless=true</jmxFlag>
                            <jmxFlag>-XX:+UnlockExperimentalVMOptions</jmxFlag>
                            <jmxFlag>-XX:+UseCGroupMemoryLimitForHeap</jmxFlag>
                            <jmxFlag>-XX:InitialRAMFraction=2</jmxFlag>
                            <jmxFlag>-XX:MinRAMFraction=2</jmxFlag>
                            <jmxFlag>-XX:MaxRAMFraction=2</jmxFlag>
                            <jmxFlag>-XX:+UseG1GC</jmxFlag>
                        </jvmFlags>
                        <mainClass>${mainClass}</mainClass>
                        <ports>
                            <port>8080</port>
                        </ports>
                    </container>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                        <!-- phase>package</phase -->
                        <phase>post-integration-test</phase>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>
</project>
